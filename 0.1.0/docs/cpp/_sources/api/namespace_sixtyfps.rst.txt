
.. _namespace_sixtyfps:

Namespace sixtyfps
==================


.. contents:: Contents
   :local:
   :backlinks: none




Detailed Description
--------------------

The :code:`sixtyfps` namespace is the primary entry point into the SixtyFPS C++ API.
All available types are in this namespace.

There are two ways of loading :code:`.60` markup files in your application:

#. You could translate them to C++ with the help of the :code:`sixtyfps_target_60_sources`
   cmake command and use the :doc:`generated C++ API<../generated_code>` to instantiate the UI,
   set or get property values or callback handlers. That API will use types from the
   :code:`sixtyfps` namespace, for example :cpp:class:`sixtyfps::SharedString` or
   :cpp:class:`sixtyfps::Color`.
#. Alternatively, you can choose to load the :code:`.60` files dynamically at run-time, using
   the SixtyFPS Interpreter from the :code:`sixtyfps::interpreter` namespace, starting at
   :cpp:class:`sixtyfps::interpreter::ComponentCompiler`.

Once you have loaded or instantiated a `.60` file, you will receive a reference to the instance
in a :cpp:class:`sixtyfps::ComponentHandle`. This is a smart pointer that owns
the actual instance and keeps it alive as long as at least one
:cpp:class:`sixtyfps::ComponentHandle` is in scope, similar to :code:`std::shared_ptr<T>`.

For more complex UIs it is common to supply data in the form of an abstract data model, that is
used with |Repetition|_ repetitions or |ListView|_ elements in the :code:`.60`
language. All models in C++ are sub-classes of the :cpp:class:`sixtyfps::Model` and you can
sub-class it yourself. For convenience, the :cpp:class:`sixtyfps::VectorModel` provides an
implementation that is backed by a :code:`std::vector<T>`.

 





Namespaces
----------


- :ref:`namespace_sixtyfps__interpreter`

- :ref:`namespace_sixtyfps__testing`


Classes
-------


- :ref:`exhale_struct_structsixtyfps_1_1Image`

- :ref:`exhale_struct_structsixtyfps_1_1RgbaColor`

- :ref:`exhale_struct_structsixtyfps_1_1SharedString`

- :ref:`exhale_struct_structsixtyfps_1_1SharedVector`

- :ref:`exhale_struct_structsixtyfps_1_1Size`

- :ref:`exhale_struct_structsixtyfps_1_1Timer`

- :ref:`exhale_class_classsixtyfps_1_1Brush`

- :ref:`exhale_class_classsixtyfps_1_1Color`

- :ref:`exhale_class_classsixtyfps_1_1ComponentHandle`

- :ref:`exhale_class_classsixtyfps_1_1ComponentWeakHandle`

- :ref:`exhale_class_classsixtyfps_1_1Model`

- :ref:`exhale_class_classsixtyfps_1_1VectorModel`


Functions
---------


- :ref:`exhale_function_namespacesixtyfps_1acfc4b71092d63a5fbd0cbc8471e4da52`

- :ref:`exhale_function_namespacesixtyfps_1a19e5480ac7f0311efafac58b65b38b20`

- :ref:`exhale_function_namespacesixtyfps_1ab1b9b4016714eee96dba1457ce2a3b22`
