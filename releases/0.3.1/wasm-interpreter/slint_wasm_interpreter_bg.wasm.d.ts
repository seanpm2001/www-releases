/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function slint_mock_elapsed_time(a: number): void;
export function slint_send_mouse_click(a: number, b: number, c: number, d: number): void;
export function send_keyboard_string_sequence(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function __wbg_compilationresult_free(a: number): void;
export function compilationresult_component(a: number): number;
export function compilationresult_diagnostics(a: number): number;
export function compilationresult_error_string(a: number, b: number): void;
export function compile_from_string(a: number, b: number, c: number, d: number, e: number): number;
export function compile_from_string_with_style(a: number, b: number, c: number, d: number, e: number, f: number, g: number): number;
export function __wbg_wrappedcompiledcomp_free(a: number): void;
export function wrappedcompiledcomp_run(a: number, b: number, c: number): void;
export function wrappedcompiledcomp_create(a: number, b: number, c: number, d: number): void;
export function wrappedcompiledcomp_create_with_existing_window(a: number, b: number, c: number): void;
export function __wbg_wrappedinstance_free(a: number): void;
export function wrappedinstance_show(a: number): void;
export function wrappedinstance_hide(a: number): void;
export function run_event_loop(a: number): void;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hf42adf0c4151a227(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h231dc434c7c0d50c(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h71345b8ad0a6a90b(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h6b881e5dbee8f7c1(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h206fe76407a33af4(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h8929695cc1da3957(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h2cad0aa4a2d3b2f3(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h7843a6cd40b50391(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h84ff4e3148e72022(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hf78f9772b35f2465(a: number, b: number): void;
export function _dyn_core__ops__function__Fn__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h3189de103e2b75b9(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__Fn__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hba28e1900f70c662(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__Fn__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h03bc219184be21be(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__Fn__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h31ec58d0251fe1af(a: number, b: number, c: number): void;
export function __wbindgen_free(a: number, b: number): void;
export function __wbindgen_exn_store(a: number): void;
export function wasm_bindgen__convert__closures__invoke2_mut__h7b5daefe56906b77(a: number, b: number, c: number, d: number): void;
export function __wbindgen_add_to_stack_pointer(a: number): number;
